{"version":3,"sources":["webpack:///../TODO.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"ucAMO,IAAMA,EAAe,Q,wJAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,QADR,QAGA,iBAAQ,CACN,UAAa,sBAEb,oBAAIC,WAAW,MAAS,CACtB,UAAa,mBACZ,uBAAOA,WAAW,MAAS,CAC1B,KAAQ,WACR,SAAW,EACX,UAAY,KALhB,mBAOA,oBAAIA,WAAW,MAAS,CACtB,UAAa,mBACZ,uBAAOA,WAAW,MAAS,CAC1B,KAAQ,WACR,SAAW,EACX,UAAY,KALhB,sDAOA,oBAAIA,WAAW,MAAS,CACtB,UAAa,mBACZ,uBAAOA,WAAW,MAAS,CAC1B,KAAQ,WACR,SAAW,EACX,UAAY,KALhB,2EAOA,oBAAIA,WAAW,MAAS,CACtB,UAAa,mBACZ,uBAAOA,WAAW,MAAS,CAC1B,KAAQ,WACR,SAAW,EACX,UAAY,KALhB,uEAOA,oBAAIA,WAAW,MAAS,CACtB,UAAa,mBACZ,uBAAOA,WAAW,MAAS,CAC1B,KAAQ,WACR,SAAW,EACX,UAAY,KALhB,8DAOA,oBAAIA,WAAW,MAAS,CACtB,UAAa,mBACZ,uBAAOA,WAAW,MAAS,CAC1B,KAAQ,WACR,SAAW,EACX,UAAY,KALhB,+DAQF,uBACA,iBAAQ,CACN,GAAM,qBADR,qBAGA,iBAAQ,CACN,GAAM,YADR,YAGA,qGACA,iBAAQ,CACN,GAAM,YADR,YAGA,0GACA,iBAAQ,CACN,GAAM,QADR,QAGA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,eAIL,iBAAQ,CACN,GAAM,kBADR,kBAGA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,iBAIL,iBAAQ,CACN,GAAM,SADR,SAGA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,eAIL,iBAAQ,CACN,GAAM,iBADR,iBAGA,yBACE,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,SAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,YAKJ,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,QAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,WAMN,iBAAQ,CACN,GAAM,iBADR,iBAGA,8BACE,iBAAGA,WAAW,cAAd,4C,+IAMNJ,EAAWK,gBAAiB","file":"component---todo-md-9317acbfdcc0bc3f5acd.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/levithomason/src/stardust-ui/specifications/.docz/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"todo\"\n    }}>{`TODO`}</h1>\n    <ul {...{\n      \"className\": \"contains-task-list\"\n    }}>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}><input parentName=\"li\" {...{\n          \"type\": \"checkbox\",\n          \"checked\": true,\n          \"disabled\": true\n        }}></input>{` `}{`Vision page`}</li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}><input parentName=\"li\" {...{\n          \"type\": \"checkbox\",\n          \"checked\": true,\n          \"disabled\": true\n        }}></input>{` `}{`Auto iterate concepts in component detail page`}</li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}><input parentName=\"li\" {...{\n          \"type\": \"checkbox\",\n          \"checked\": false,\n          \"disabled\": true\n        }}></input>{` `}{`Extend schemas to allow for 'proposedName' to group divergent names`}</li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}><input parentName=\"li\" {...{\n          \"type\": \"checkbox\",\n          \"checked\": false,\n          \"disabled\": true\n        }}></input>{` `}{`Document some sources from Alexa 100, create Add a Web Site/App`}</li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}><input parentName=\"li\" {...{\n          \"type\": \"checkbox\",\n          \"checked\": false,\n          \"disabled\": true\n        }}></input>{` `}{`Cleanup Checkbox concepts, document \"why/how\" as we go`}</li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}><input parentName=\"li\" {...{\n          \"type\": \"checkbox\",\n          \"checked\": false,\n          \"disabled\": true\n        }}></input>{` `}{`Cleanup Dropdown concepts, document \"why/how\" as we go`}</li>\n    </ul>\n    <hr></hr>\n    <h1 {...{\n      \"id\": \"detail-page-ideas\"\n    }}>{`Detail Page Ideas`}</h1>\n    <h2 {...{\n      \"id\": \"examples\"\n    }}>{`Examples`}</h2>\n    <p>{`Here are possible implementation examples following the above specification.`}</p>\n    <h3 {...{\n      \"id\": \"css-grid\"\n    }}>{`CSS Grid`}</h3>\n    <p>{`TODO: define the CSS grid for this component's anatomy, likely the final solution`}</p>\n    <h3 {...{\n      \"id\": \"html\"\n    }}>{`HTML`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<todo />\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"web-components\"\n    }}>{`Web Components`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<x-todo />\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"react\"\n    }}>{`React`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Todo />\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"design-tokens\"\n    }}>{`Design Tokens`}</h2>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Token`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Effect`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Todo`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Todo`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h2 {...{\n      \"id\": \"compatibility\"\n    }}>{`Compatibility`}</h2>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Should show a compatibility table here`}</p>\n    </blockquote>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}