{"version":3,"sources":["webpack:///./src/pages/mission.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"sOAMO,IAAMA,EAAe,GAOtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,iBAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,yIACA,gCACA,uBACA,gCACA,4TAGA,gUAIA,wcAIA,+BACA,4FACA,sBACE,kBAAIC,WAAW,MAAf,gDACA,kBAAIA,WAAW,MAAf,2DACA,kBAAIA,WAAW,MAAf,qDACA,kBAAIA,WAAW,MAAf,2DAEF,oCACA,oKAEA,gCACA,sBACE,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAK,sBAAQA,WAAW,KAAnB,kEACnB,iBAAGA,WAAW,MAAK,sBAAQA,WAAW,KAAnB,QAAnB,oBACS,+BAAGA,WAAW,KAAQ,CAC3B,KAAQ,yDADH,uBADT,wKAKF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAK,sBAAQA,WAAW,KAAnB,+CACnB,iBAAGA,WAAW,MAAK,sBAAQA,WAAW,KAAnB,QAAnB,6SAKyB,0BAAYA,WAAW,KAAvB,eALzB,eAKgG,0BAAYA,WAAW,KAAvB,WALhG,wLAaRJ,EAAWK,gBAAiB","file":"component---src-pages-mission-mdx-f0ae9cbde02714b5aebb.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/levithomason/src/stardust-ui/specifications/src/components/layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p>{`This project is in its infancy. Expect rapid iteration and high-flux while we flesh out the mission and process.`}</p>\n    <p>{`Thanks!`}</p>\n    <hr></hr>\n    <h1>{`Vision`}</h1>\n    <p>{`The web deserves interoperability between component frameworks and design systems.\nThe UI community is in a similar place as the industrial revolution prior to standardization.\nUntold amounts of human effort are exhausted globally every day on rebuilding identical components for web apps.`}</p>\n    <p>{`This should not be the case.\nThe UI community should standardize namings and structures for common components.\nWe should also standardize a way of theming these components.\nWe should set a path for existing solutions to converge and for browser to natively provide these things in the future.`}</p>\n    <p>{`UI component patterns have evolved and stabilized but have not made their way to to browsers or standards.\nDesigners and developers reinvent the same components for every product they build.\nWhen building a web app or web page designers and developers should have a common set of components at their disposal.\nWe shouldn't have to rebuild a dropdown, modal dialog, split button, or other components before we build our products.`}</p>\n    <h1>{`Goals`}</h1>\n    <p>{`These are the goals Open UI believes will realize the above vision.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Document component names as they exist today`}</li>\n      <li parentName=\"ul\">{`A common language for describing UIs and design systems`}</li>\n      <li parentName=\"ul\">{`Eventual browser standards for web app components`}</li>\n      <li parentName=\"ul\">{`Converging designer processes and developer work flows`}</li>\n    </ul>\n    <h1>{`Principles`}</h1>\n    <p>{`These are the principles Open UI believes should be considered to realize the above goals.\nAs with all rules, there are always exceptions.`}</p>\n    <h2>{`Naming`}</h2>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`Descriptivism is superior to prescriptivism for finding names`}</strong></p>\n        <p parentName=\"li\"><strong parentName=\"p\">{`Why?`}</strong>{`\nBorrowing from `}<a parentName=\"p\" {...{\n            \"href\": \"https://en.wikipedia.org/wiki/Linguistic_description\"\n          }}>{`linguistic analysis`}</a>{` we believe that objective analysis of existing words in use in the UI community at large will produce names that are most likely to be adopted by the broader web.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`Names should be void of design information`}</strong></p>\n        <p parentName=\"li\"><strong parentName=\"p\">{`Why?`}</strong>{`\nWhen designs change names should not become invalid.\nNames should stand the test of time.\nUsually, names based on intent or usage are more robust and stand this test.\nConsider a component that displays mock content while waiting for the actual content to load.\nIt might be more ideally named `}<inlineCode parentName=\"p\">{`Placeholder`}</inlineCode>{` opposed to `}<inlineCode parentName=\"p\">{`Shimmer`}</inlineCode>{`, even though most implementations appears to flash or shimmer.\nWhen the design changes and these components no longer shimmer, the name will become invalid and not make sense.`}</p>\n      </li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}