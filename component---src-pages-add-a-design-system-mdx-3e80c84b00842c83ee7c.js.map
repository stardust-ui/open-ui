{"version":3,"sources":["webpack:///../src/pages/add-a-design-system.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","src","alt","isMDXComponent"],"mappings":"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","file":"component---src-pages-add-a-design-system-mdx-3e80c84b00842c83ee7c.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/levithomason/src/stardust-ui/specifications/.docz/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Image, Tip } from '../components';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"add-a-design-system\"\n    }}>{`Add a Design System`}</h1>\n    <p>{`Open UI uses design systems as one of its forms of evidence for cataloging emergent UI standards.\nDesign systems are documented in JSON5 format according a JSON schema.\nThis provides us with a consistent and machine readable way of documenting the design system.`}</p>\n    <h2 {...{\n      \"id\": \"criteria\"\n    }}>{`Criteria`}</h2>\n    <p>{`In order to succeed as an open standard, Open UI must collect the most useful ideas and patterns that exist.\nBecause of this, not all design systems are suitable to use as Open UI sources.`}</p>\n    <p>{`We believe the most useful ideas are those that:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`:white_check_mark: `}<strong parentName=\"li\">{`support`}</strong>{` designers and developers`}</li>\n      <li parentName=\"ul\">{`:white_check_mark: `}<strong parentName=\"li\">{`support`}</strong>{` multiple platforms and frameworks`}</li>\n      <li parentName=\"ul\">{`:white_check_mark: `}<strong parentName=\"li\">{`support`}</strong>{` accessible users`}</li>\n      <li parentName=\"ul\">{`:white_check_mark: `}<strong parentName=\"li\">{`support`}</strong>{` small and enterprise projects`}</li>\n      <li parentName=\"ul\">{`:white_check_mark: `}<strong parentName=\"li\">{`demonstrate`}</strong>{` organic adoption in a wide community`}</li>\n      <li parentName=\"ul\">{`:white_check_mark: `}<strong parentName=\"li\">{`demonstrate`}</strong>{` significant real-world usage`}</li>\n      <li parentName=\"ul\">{`:white_check_mark: `}<strong parentName=\"li\">{`demonstrate`}</strong>{` deep thought and debate by many experienced minds`}</li>\n    </ul>\n    <p>{`A design system does not need to meet all of these criteria but it should meet many of them.\nThe design systems we've launched with we believe are representative of these criteria.\nWe may not accept PRs contributing design systems that are lacking by these criteria.`}</p>\n    <h2 {...{\n      \"id\": \"initial-information\"\n    }}>{`Initial information`}</h2>\n    <p>{`Create a JSON5 file in `}<inlineCode parentName=\"p\">{`/research`}</inlineCode>{` for the design system, like `}<inlineCode parentName=\"p\">{`/specifications/antd.json5`}</inlineCode>{`.\nAdd the `}<inlineCode parentName=\"p\">{`$schema`}</inlineCode>{` key pointing to our `}<inlineCode parentName=\"p\">{`design-system.schema.json5`}</inlineCode>{` schema and complete the required fields.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json5\"\n      }}>{`{\n  $schema: '../schemas/design-system.schema.json5',\n  name: 'Ant Design',\n  description: 'A design system with values of Nature and Determinacy for better user experience of enterprise applications.',\n  url: 'http://ant.design',\n  by: 'AFX',\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"components\"\n    }}>{`Components`}</h2>\n    <p>{`Every UI component in the design system should be added to the components array:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json5\"\n      }}>{`{\n  $schema: '../schemas/design-system.schema.json5',\n  name: 'Ant Design',\n  description: 'A design system with values of Nature and Determinacy for better user experience of enterprise applications.',\n  url: 'http://ant.design',\n  by: 'AFX',\n  components: [{ name: 'Button' }],\n}\n`}</code></pre>\n    <p>{`Do not document utility components.\nOnly document components which render a user interface that can be experienced either visually, by keyboard, or narration.`}</p>\n    <h2 {...{\n      \"id\": \"concepts\"\n    }}>{`Concepts`}</h2>\n    <p>{`Component concepts are terms used to described the appearance and behavior of a component.\nThings like `}<inlineCode parentName=\"p\">{`primary`}</inlineCode>{` for a `}<inlineCode parentName=\"p\">{`Button`}</inlineCode>{`.`}</p>\n    <p>{`Concepts are surfaced in component APIs will vary by framework and platform conventions.\nSometimes concepts are grouped into categories.\nThe concepts themselves should be cataloged opposed to the categories the design system puts them in.`}</p>\n    <p>{`Example, the concept of `}<inlineCode parentName=\"p\">{`primary`}</inlineCode>{` for a `}<inlineCode parentName=\"p\">{`Button`}</inlineCode>{` might be surfaced in a design guide under the \"Types\" heading, in an CSS framework with the HTML `}<inlineCode parentName=\"p\">{`class=\"primary\"`}</inlineCode>{`, or in a React component library as the prop `}<inlineCode parentName=\"p\">{`type='primary'`}</inlineCode>{`.\nOpen UI's job is to recognize that the concept `}<inlineCode parentName=\"p\">{`primary`}</inlineCode>{` exists within the scope of a `}<inlineCode parentName=\"p\">{`Button`}</inlineCode>{` component.`}</p>\n    <p>{`When cataloging components in a design system, we record the concept `}<inlineCode parentName=\"p\">{`primary`}</inlineCode>{`.\nThe category `}<inlineCode parentName=\"p\">{`type`}</inlineCode>{` is not a concept but it should be noted that the design system categorized `}<inlineCode parentName=\"p\">{`primary`}</inlineCode>{` as a `}<inlineCode parentName=\"p\">{`type`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json5\"\n      }}>{`...\n  components: [\n    {\n      name: 'Button',\n      concepts: [\n        { name: 'primary', category: 'type' },\n      ],\n    },\n  ],\n...\n`}</code></pre>\n    <p>{`:bulb: Always use kebab-case for concept names.`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`TODO:`}<br />{`\nThe below guidance has changed already. Carbon for example has no `}<inlineCode parentName=\"p\">{`size`}</inlineCode>{` concept, just `}<inlineCode parentName=\"p\">{`small`}</inlineCode>{`.\nLatest thinking says it is useful to know how many sizes are applied to each component, opposed to just \"size\".\nThe guidance for what should be a concept could be whether or not the component can \"be\" that concept.\nNo one says a Button can be \"size\".\nExample, Carbon says a Button can be \"small\", AntD says a Button can be \"large\", and Semantic says a Button can be \"massive\".\nPut another way, we would record \"is\" relationships which denote `}<em parentName=\"p\">{`qualities`}</em>{`, like \"that button is small\".\nWe would ignore \"has a\" relationships which denote `}<em parentName=\"p\">{`properties`}</em>{`, like \"that button has a size\".`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <h2 parentName=\"blockquote\" {...{\n        \"id\": \"concepts-vs-categories\"\n      }}>{`Concepts vs Categories`}</h2>\n      <p parentName=\"blockquote\">{`Above we reasoned to flatten the `}<inlineCode parentName=\"p\">{`primary`}</inlineCode>{` concept from within its `}<inlineCode parentName=\"p\">{`type`}</inlineCode>{` grouping.\nDo we do this for all enum values, such as flattening `}<inlineCode parentName=\"p\">{`small`}</inlineCode>{` from within the `}<inlineCode parentName=\"p\">{`size`}</inlineCode>{` grouping?\nNo, because `}<inlineCode parentName=\"p\">{`size`}</inlineCode>{` is already a concept with consensus as to its meaning and bounds.`}</p>\n      <p parentName=\"blockquote\">{`We can find `}<inlineCode parentName=\"p\">{`size`}</inlineCode>{` in an `}<a parentName=\"p\" {...{\n          \"href\": \"https://en.wikipedia.org/wiki/Size\"\n        }}>{`encyclopedia`}</a>{` with a definition, \"Size is the magnitude or dimensions of a thing.\"\nIt is a concept that exists on its own.\nContrast this with `}<inlineCode parentName=\"p\">{`type`}</inlineCode>{` which is abstract and ambiguous.\nIt leads to a `}<a parentName=\"p\" {...{\n          \"href\": \"https://en.wikipedia.org/wiki/Type\"\n        }}>{`disambiguation page`}</a>{` and does not stand on its own.\nWe can only talk about `}<inlineCode parentName=\"p\">{`type`}</inlineCode>{`s in the context of some other thing.`}</p>\n      <p parentName=\"blockquote\">{`Another test is whether or not there is intuition and consensus about what this group contains.\nIf you asked a large diverse group of people to list items in this group, do you expect general consensus?\nList off `}<inlineCode parentName=\"p\">{`size`}</inlineCode>{`s, did you think of \"small\", \"medium\", or \"large\"?\nList off `}<inlineCode parentName=\"p\">{`type`}</inlineCode>{`s, can you think of anything that makes sense here?`}</p>\n      <p parentName=\"blockquote\">{`This table can help you determine if a concept is in fact a concept itself or if it is a group of concepts whose items need to be flattened into many concepts:`}</p>\n      <table parentName=\"blockquote\">\n        <thead parentName=\"table\">\n          <tr parentName=\"thead\">\n            <th parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`Might be a concept`}</th>\n            <th parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`Might be a group of concepts`}</th>\n          </tr>\n        </thead>\n        <tbody parentName=\"table\">\n          <tr parentName=\"tbody\">\n            <td parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`Well-known`}</td>\n            <td parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`Obscure`}</td>\n          </tr>\n          <tr parentName=\"tbody\">\n            <td parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`Concrete`}</td>\n            <td parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`Abstract`}</td>\n          </tr>\n          <tr parentName=\"tbody\">\n            <td parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`Stands alone`}</td>\n            <td parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`Requires specific context`}</td>\n          </tr>\n          <tr parentName=\"tbody\">\n            <td parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`Has consensus`}</td>\n            <td parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`Little to no consensus`}</td>\n          </tr>\n        </tbody>\n      </table>\n    </blockquote>\n    <h2 {...{\n      \"id\": \"images\"\n    }}>{`Images`}</h2>\n    <p>{`An image of the concept should be included with the concept.\nThis allows a visual aid to be shown when the concept might need to be clarified in the specifications.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json5\"\n      }}>{`...\n  components: [\n    {\n      name: 'Button',\n      concepts: [\n        { name: 'primary', group: 'type', image: 'antd-button-primary.png' },\n      ],\n    },\n  ],\n...\n`}</code></pre>\n    <p>{`You can use a screenshot tool to capture these images directly from the design system.\nHere's an example image of the primary Button in Ant Design.`}</p>\n    <Image src=\"antd-button-primary.png\" alt=\"Ant Design Primary Button\" mdxType=\"Image\" />\n    <p>{`If the image requires showing motion or interaction, considering using a gif tool.`}</p>\n    <Image src=\"sui-button-animated.gif\" alt=\"Semantic UI Animated Button\" mdxType=\"Image\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}