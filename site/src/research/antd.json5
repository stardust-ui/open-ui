{
  "$schema": "../schemas/design-system.schema.json5",
  "lastUpdated": "2019-08-22",
  "name": "Ant Design",
  "description": "A design system with values of Nature and Determinacy for better user experience of enterprise applications.",
  "url": "http://ant.design",
  "discipline": "development",
  "by": "AFX",
  "components": [
    {
      "name": "Button",
      "definition": "To trigger an operation",
      "category": "General",
      "url": "https://ant.design/components/button",
      "anatomy": [
        { "name": "icon" },
        { "name": "root", "implicit": true },
        { "name": "content", "implicit": true }
      ],
      "concepts": [
        {
          "name": "primary",
          "category": "type",
          "image": "antd-button-primary.png",
          "$comment": "Styled with the primary theme color."
        },
        {
          "name": "default",
          "category": "type",
          "image": "antd-button-default.png",
          "$comment": "No special formatting, also eluded to as a secondary button."
        },
        {
          "name": "dashed",
          "category": "type",
          "image": "antd-button-dashed.png",
          "$comment": "Has a dashed outline."
        },
        {
          "name": "danger",
          "category": "type",
          "image": "antd-button-danger.png",
          "$comment": "Is red colored."
        },
        {
          "name": "link",
          "category": "type",
          "image": "antd-button-link.png",
          "$comment": "Formatted like an anchor tag with button padding."
        },
        {
          "name": "icon",
          "description": "Button components can contain an Icon",
          "image": "antd-button-icon.png"
        },
        {
          "name": "small",
          "description": "Ant Design supports a default button size as well as a large and small size.",
          "image": "antd-button-size.png"
        },
        {
          "name": "large",
          "description": "Ant Design supports a default button size as well as a large and small size.",
          "image": "antd-button-size.png"
        },
        {
          "name": "circle",
          "description": "Can be set to circle, round or omitted.",
          "category": "shape",
          "image": "antd-button-circle.png"
        },
        {
          "name": "round",
          "description": "Can be set to circle, round or omitted.",
          "category": "shape",
          "image": "antd-button-round.png"
        },
        {
          "name": "disabled",
          "description": "",
          "image": "antd-button-disabled.png"
        },
        {
          "name": "loading",
          "description": "Set the loading status of button.",
          "image": "antd-button-loading.png"
        },
        {
          "name": "group",
          "description": "Buttons can be grouped by placing multiple Button components into a Button.Group. The size can be set to large, small or left unset resulting in a default size.",
          "image": "antd-button-group.png"
        },
        {
          "name": "ghost",
          "description": "Make background transparent and invert text and border colors. It is common used in colored background.",
          "image": "antd-button-ghost.png"
        },
        {
          "name": "block",
          "description": "block property will make the button fit to its parent width.",
          "image": "antd-button-block.png"
        }
      ]
    },
    {
      "name": "Icon",
      "url": "https://ant.design/components/icon",
      "category": "General"
    },
    {
      "name": "Typography",
      "url": "https://ant.design/components/typography",
      "category": "General"
    },
    {
      "name": "Text",
      "category": "Typography",
      "url": "https://ant.design/components/typography/#Typography.Text",
      "concepts": [
        {
          "name": "code",
          "description": "code style",
          "image": "antd-text-code.png"
        },
        {
          "name": "copyable",
          "description": "Config copy. Can set copy text and callback when is an object",
          "image": "antd-text-copyable.png"
        },
        {
          "name": "delete",
          "description": "delete line style",
          "image": "antd-text-delete.png"
        },
        {
          "name": "disabled",
          "description": "Disable content",
          "image": "antd-text-disabled.png"
        },
        {
          "name": "editable",
          "description": "Editable. Can control edit state when is object",
          "image": "antd-text-editable.png"
        },
        {
          "name": "ellipsis",
          "description": "Display ellipsis when overflow"
          // TODO: image: '',
        },
        {
          "name": "mark",
          "description": "mark style",
          "image": "antd-text-editable.png"
        },
        {
          "name": "underline",
          "description": "underline style",
          "image": "antd-text-editable.png"
        },
        {
          "name": "strong",
          "description": "bold style",
          "image": "antd-text-strong.png"
        },
        {
          "name": "secondary",
          "group": "type",
          "description": "Content type",
          "image": "antd-text-type-secondary.png"
        },
        {
          "name": "warning",
          "group": "type",
          "description": "Content type",
          "image": "antd-text-type-warning.png"
        },
        {
          "name": "danger",
          "group": "type",
          "description": "Content type",
          "image": "antd-text-type-danger.png"
        }
      ]
    },
    {
      "name": "Title",
      "category": "Typography",
      "url": "https://ant.design/components/typography/#Typography.Title",
      "concepts": [
        {
          "name": "code",
          "description": "code style"
          // TODO: image: '',
        },
        {
          "name": "copyable",
          "description": "Config copy. Can set copy text and callback when is an object"
          // TODO: image: '',
        },
        {
          "name": "delete",
          "description": "delete line style"
          // TODO: image: '',
        },
        {
          "name": "disabled",
          "description": "Disable content"
          // TODO: image: '',
        },
        {
          "name": "editable",
          "description": "Editable. Can control edit state when is object"
          // TODO: image: '',
        },
        {
          "name": "ellipsis",
          "description": "Display ellipsis when overflow. Can config rows and expandable by using object"
          // TODO: image: '',
        },
        {
          "name": "level",
          "description": "Set content importance. Match with h1, h2, h3, h4"
          // TODO: image: '',
        },
        {
          "name": "mark",
          "description": "mark style"
          // TODO: image: '',
        },
        {
          "name": "underline",
          "description": "underline style"
          // TODO: image: '',
        },
        {
          "name": "onChange",
          "description": "Trigger when user edit the content"
          // TODO: image: '',
        },
        {
          "name": "secondary",
          "group": "type",
          "description": "Content type"
          // TODO: image: '',
        },
        {
          "name": "warning",
          "group": "type",
          "description": "Content type"
          // TODO: image: '',
        },
        {
          "name": "danger",
          "group": "type",
          "description": "Content type"
          // TODO: image: '',
        }
      ]
    },
    {
      "name": "Paragraph",
      "category": "Typography",
      "url": "https://ant.design/components/typography/#Typography.Paragraph",
      "concepts": [
        {
          "name": "code",
          "description": "code style"
        },
        {
          "name": "copyable",
          "description": "Config copy. Can set copy text and callback when is an object"
        },
        {
          "name": "delete",
          "description": "delete line style"
        },
        {
          "name": "disabled",
          "description": "Disable content"
        },
        {
          "name": "editable",
          "description": "Editable. Can control edit state when is object"
        },
        {
          "name": "ellipsis",
          "description": "Display ellipsis when overflow. Can config rows and expandable by using object"
        },
        {
          "name": "mark",
          "description": "mark style"
        },
        {
          "name": "underline",
          "description": "underline style"
        },
        {
          "name": "onChange",
          "description": "Trigger when user edit the content"
        },
        {
          "name": "strong",
          "description": "bold style"
        },
        {
          "name": "type",
          "description": "Content type"
        }
      ]
    },
    {
      "name": "Grid",
      "url": "https://ant.design/components/grid",
      "category": "Layout"
    },
    {
      "name": "Layout",
      "url": "https://ant.design/components/layout",
      "category": "Layout"
    },
    {
      "name": "Affix",
      "url": "https://ant.design/components/affix",
      "category": "Navigation"
    },
    {
      "name": "Breadcrumb",
      "url": "https://ant.design/components/breadcrumb",
      "category": "Navigation"
    },
    {
      "name": "Dropdown",
      "url": "https://ant.design/components/dropdown",
      "category": "Navigation",
      "description": "A dropdown list. When To Use: If there are too many operations to display, you can wrap them in a Dropdown. By clicking/hovering on the trigger, a dropdown menu should appear, which allows you to choose one option and execute relevant actions.",
      "concepts": [
        {
          "name": "disabled",
          "description": "whether the dropdown menu is disabled"
        },
        {
          "name": "getPopupContainer",
          "description": "to set the container of the dropdown menu. The default is to create a div element in body, you can reset it to the scrolling area and make a relative reposition. example	Function(triggerNode)	() => document.body"
        },
        {
          "name": "overlay",
          "description": "the dropdown menu"
        },
        {
          "name": "overlayClassName",
          "description": "Class name of the dropdown root element"
        },
        {
          "name": "overlayStyle",
          "description": "Style of the dropdown root element"
        },
        {
          "name": "placement",
          "description": "placement of pop menu: bottomLeft bottomCenter bottomRight topLeft topCenter topRight	String	bottomLeft"
        },
        {
          "name": "trigger",
          "description": "the trigger mode which executes the drop-down action, hover doesn't work on mobile device Array<click|hover|contextMenu>"
        },
        {
          "name": "visible",
          "description": "whether the dropdown menu is visible"
        },
        {
          "name": "onVisibleChange",
          "description": "a callback function takes an argumen't: visible, is executed when the visible state is changed"
        }
      ]
    },
    {
      "name": "Dropdown.Button",
      "url": "https: //ant.design/components/dropdown",
      "category": "Navigation",
      "concepts": [
        {
          "name": "disabled",
          "description": "whether the dropdown menu is disabled"
        },
        {
          "name": "icon",
          "description": "icon of right"
        },
        {
          "name": "overlay",
          "description": "the dropdown menu"
        },
        {
          "name": "placement",
          "description": "placement of pop menu: bottomLeft bottomCenter bottomRight topLeft topCenter topRight	String	bottomLeft"
        },
        {
          "name": "size",
          "description": "size of the button, the same as Button"
        },
        {
          "name": "trigger",
          "description": "the trigger mode which executes the drop-down action, hover doesn't work on mobile device Array<click|hover|contextMenu>"
        },
        {
          "name": "type",
          "description": "type of the button, the same as Button"
        },
        {
          "name": "visible",
          "description": "whether the dropdown menu is visible"
        },
        {
          "name": "onClick",
          "description": "a callback function, the same as Button, which will be executed when you click the button on the left"
        },
        {
          "name": "onVisibleChange",
          "description": "a callback function takes an argumen't: visible, is executed when the visible state is changed"
        }
      ]
    },
    {
      "name": "Menu",
      "url": "https://ant.design/components/menu",
      "category": "Navigation"
    },
    {
      "name": "Pagination",
      "url": "https://ant.design/components/pagination",
      "category": "Navigation"
    },
    {
      "name": "PageHeader",
      "url": "https://ant.design/components/page-header",
      "category": "Navigation"
    },
    {
      "name": "Steps",
      "url": "https://ant.design/components/steps",
      "category": "Navigation"
    },
    {
      "name": "AutoComplete",
      "url": "https://ant.design/components/auto-complete",
      "category": "Data Entry"
    },
    {
      "name": "Checkbox",
      "url": "https://ant.design/components/checkbox",
      "category": "Data Entry",
      "concepts": [
        {
          "name": "basic",
          "description": "Basic checkbox",
          "image": "antd-checkbox-basic.png"
        },
        {
          "name": "autoFocus",
          "description": "get focus when component mounted",
          "image": "antd-checkbox-autofocus.png"
        },
        {
          "name": "checked",
          "description": "Specifies whether the checkbox is selected.",
          "image": "antd-checkbox-checked.png"
        },
        {
          "name": "disabled",
          "description": "Disable checkbox",
          "image": "antd-checkbox-disabled.png"
        },
        {
          "name": "indeterminate",
          "description": "indeterminate checked state of checkbox",
          "image": "antd-checkbox-indeterminate.png"
        }
      ]
    },
    {
      "name": "CheckboxGroup",
      "url": "https://ant.design/components/checkbox",
      "category": "Data Entry",
      "concepts": [
        { "name": "disabled", "description": "Disable all checkboxes" },
        {
          "name": "name",
          "description": "The name property of all input[type=\"checkbox\"] children"
        },
        { "name": "options", "description": "Specifies options" },
        { "name": "value", "description": "Used for setting the currently selected value." }
      ]
    },
    {
      "name": "Cascader",
      "url": "https://ant.design/components/cascader",
      "category": "Data Entry"
    },
    {
      "name": "DatePicker",
      "url": "https://ant.design/components/date-picker",
      "category": "Data Entry"
    },
    {
      "name": "Form",
      "url": "https://ant.design/components/form",
      "category": "Data Entry"
    },
    {
      "name": "InputNumber",
      "url": "https://ant.design/components/input-number",
      "category": "Data Entry"
    },
    {
      "name": "Input",
      "url": "https://ant.design/components/input",
      "category": "Data Entry"
    },
    {
      "name": "Mentions",
      "url": "https://ant.design/components/mentions",
      "category": "Data Entry"
    },
    {
      "name": "Rate",
      "url": "https://ant.design/components/rate",
      "category": "Data Entry"
    },
    {
      "name": "Radio",
      "url": "https://ant.design/components/radio",
      "category": "Data Entry"
    },
    {
      "name": "Switch",
      "url": "https://ant.design/components/switch",
      "category": "Data Entry",
      "anatomy": [
        { "name": "checkedContent" },
        { "name": "uncheckedContent" },
        { "name": "root", "implicit": true },
        { "name": "thumb", "implicit": true },
        { "name": "loadingContent", "implicit": true }
      ],
      "description": "Switching Selector. When To Use: If you need to represent the switching between two states or on-off state. The difference between Switch and Checkbox is that Switch will trigger a state change directly when you toggle it, while Checkbox is generally used for state marking, which should work in conjunction with submit operation.",
      "concepts": [
        {
          "name": "basic",
          "description": "basic switch",
          "image": "antd-switch-basic.png"
        },
        {
          "name": "autoFocus",
          "description": "get focus when component mounted",
          "image": "antd-switch-autofocus.png"
        },
        {
          "name": "checked",
          "description": "determine whether the Switch is checked",
          "image": "antd-switch-checked.png"
        },
        {
          "name": "checkedChildren",
          "description": "content to be shown when the state is checked",
          "image": "antd-switch-checkedchildren.png"
        },
        {
          "name": "disabled",
          "description": "Disable switch",
          "image": "antd-switch-disabled.png"
        },
        {
          "name": "loading",
          "description": "loading state of switch",
          "image": "antd-switch-loading.png"
        },
        {
          "name": "default",
          "category": "size",
          "description": "the size of the Switch: default",
          "image": "antd-switch-size-default.png"
        },
        {
          "name": "small",
          "category": "size",
          "description": "the size of the Switch, options: default small	string",
          "image": "antd-switch-size-small.png"
        },
        {
          "name": "unCheckedChildren",
          "description": "content to be shown when the state is unchecked",
          "image": "antd-switch-uncheckedchildren.png"
        }
      ]
    },
    {
      "name": "Slider",
      "url": "https://ant.design/components/slider",
      "category": "Data Entry"
    },
    {
      "name": "Select",
      "url": "https://ant.design/components/select",
      "category": "Data Entry",
      "description": "Select component to select value from options. When To Use: A dropdown menu for displaying choices - an elegant alternative to the native <select> element. Utilizing Radio is recommended when there are fewer total options (less than 5).",
      "concepts": [
        {
          "name": "allowClear",
          "description": "Show clear button."
        },
        {
          "name": "autoClearSearchValue",
          "description": "Whether the current search will be cleared on selecting an item. Only applies when mode is set to multiple or tags."
        },
        {
          "name": "autoFocus",
          "description": "Get focus by default"
        },
        {
          "name": "defaultActiveFirstOption",
          "description": "Whether active first option by default"
        },
        {
          "name": "defaultValue",
          "description": "Initial selected option."
        },
        {
          "name": "number",
          "description": ""
        },
        {
          "name": "LabeledValue",
          "description": ""
        },
        {
          "name": "disabled",
          "description": "Whether disabled select"
        },
        {
          "name": "dropdownClassName",
          "description": "className of dropdown menu"
        },
        {
          "name": "dropdownMatchSelectWidth",
          "description": "Whether dropdown's width is same with select."
        },
        {
          "name": "dropdownRender",
          "description": "Customize dropdown content"
        },
        {
          "name": "dropdownStyle",
          "description": "style of dropdown menu"
        },
        {
          "name": "filterOption",
          "description": "If true, filter options by input, if function, filter options against it. The function will receive two arguments, inputValue and option, if the function returns true, the option will be included in the filtered set; Otherwise, it will be excluded."
        },
        {
          "name": "firstActiveValue",
          "description": "Value of action option by default"
        },
        {
          "name": "getPopupContainer",
          "description": "Parent Node which the selector should be rendered to. Default to body. When position issues happen, try to modify it into scrollable content and position it relative."
        },
        {
          "name": "labelInValue",
          "description": "whether to embed label in value, turn the format of value from string to {key: string, label: ReactNode}"
        },
        {
          "name": "maxTagCount",
          "description": "Max tag count to show"
        },
        {
          "name": "maxTagTextLength",
          "description": "Max tag count to show"
        },
        {
          "name": "maxTagPlaceholder",
          "description": "Placeholder for not showing tags"
        },
        {
          "name": "mode",
          "description": "Set mode of Select 'default' | 'multiple' | 'tags'	'default'"
        },
        {
          "name": "notFoundContent",
          "description": "Specify content to show when no result matches."
        },
        {
          "name": "optionFilterProp",
          "description": "Which prop value of option will be used for filter if filterOption is true"
        },
        {
          "name": "optionLabelProp",
          "description": "Which prop value of option will render as content of select. Example	string	value for combobox, children for other modes"
        },
        {
          "name": "placeholder",
          "description": "Placeholder of select"
        },
        {
          "name": "showArrow",
          "description": "Whether to show the drop-down arrow"
        },
        {
          "name": "showSearch",
          "description": "Whether show search input in single mode."
        },
        {
          "name": "size",
          "description": "Size of Select input."
        },
        {
          "name": "suffixIcon",
          "description": "The custom suffix icon"
        },
        {
          "name": "removeIcon",
          "description": "The custom remove icon"
        },
        {
          "name": "clearIcon",
          "description": "The custom clear icon"
        },
        {
          "name": "menuItemSelectedIcon",
          "description": "The custom menuItemSelected icon with multiple options"
        },
        {
          "name": "tokenSeparators",
          "description": "Separator used to tokenize on tag/multiple mode"
        },
        {
          "name": "value",
          "description": "Current selected option."
        },
        {
          "name": "number",
          "description": ""
        },
        {
          "name": "LabeledValue",
          "description": ""
        },
        {
          "name": "onBlur",
          "description": "Called when blur"
        },
        {
          "name": "onChange",
          "description": "Called when select an option or input value change, or value of input is changed in combobox mode"
        },
        {
          "name": "onDeselect",
          "description": "Called when a option is deselected, param is the selected option's value. Only called for multiple or tags, effective in multiple or tags mode only."
        },
        {
          "name": "onFocus",
          "description": "Called when focus"
        },
        {
          "name": "onInputKeyDown",
          "description": "Called when key pressed"
        },
        {
          "name": "onMouseEnter",
          "description": "Called when mouse enter"
        },
        {
          "name": "onMouseLeave",
          "description": "Called when mouse leave"
        },
        {
          "name": "onPopupScroll",
          "description": "Called when dropdown scrolls"
        },
        {
          "name": "onSearch",
          "description": "Callback function that is fired when input changed."
        },
        {
          "name": "onSelect",
          "description": "Called when a option is selected, the params are option's value (or key) and option instance."
        },
        {
          "name": "defaultOpen",
          "description": "Initial open state of dropdown"
        },
        {
          "name": "open",
          "description": "Controlled open state of dropdown"
        },
        {
          "name": "onDropdownVisibleChange",
          "description": "Call when dropdown open"
        },
        {
          "name": "loading",
          "description": "indicate loading state"
        }
      ]
    },
    {
      "name": "TreeSelect",
      "url": "https://ant.design/components/tree-select",
      "category": "Data Entry"
    },
    {
      "name": "Transfer",
      "url": "https://ant.design/components/transfer",
      "category": "Data Entry"
    },
    {
      "name": "TimePicker",
      "url": "https://ant.design/components/time-picker",
      "category": "Data Entry"
    },
    {
      "name": "Upload",
      "url": "https://ant.design/components/upload",
      "category": "Data Entry"
    },
    {
      "name": "Avatar",
      "url": "https://ant.design/components/avatar",
      "category": "Data Display"
    },
    {
      "name": "Badge",
      "url": "https://ant.design/components/badge",
      "category": "Data Display"
    },
    {
      "name": "Comment",
      "url": "https://ant.design/components/comment",
      "category": "Data Display"
    },
    {
      "name": "Collapse",
      "url": "https://ant.design/components/collapse",
      "category": "Data Display"
    },
    {
      "name": "Carousel",
      "url": "https://ant.design/components/carousel",
      "category": "Data Display"
    },
    {
      "name": "Card",
      "url": "https://ant.design/components/card",
      "category": "Data Display"
    },
    {
      "name": "Calendar",
      "url": "https://ant.design/components/calendar",
      "category": "Data Display"
    },
    {
      "name": "Description List",
      "url": "https://ant.design/components/descriptions",
      "category": "Data Display"
    },
    {
      "name": "Empty",
      "url": "https://ant.design/components/empty",
      "category": "Data Display"
    },
    {
      "name": "List",
      "url": "https://ant.design/components/list",
      "category": "Data Display"
    },
    {
      "name": "Popover",
      "url": "https://ant.design/components/popover",
      "category": "Data Display"
    },
    {
      "name": "Statistic",
      "url": "https://ant.design/components/statistic",
      "category": "Data Display"
    },
    {
      "name": "Tree",
      "url": "https://ant.design/components/tree",
      "category": "Data Display"
    },
    {
      "name": "Tooltip",
      "url": "https: //ant.design/components/tooltip",
      "category": "Data Display"
    },
    {
      "name": "Timeline",
      "url": "https://ant.design/components/timeline",
      "category": "Data Display"
    },
    {
      "name": "Tag",
      "url": "https://ant.design/components/tag",
      "category": "Data Display"
    },
    {
      "name": "Tabs",
      "url": "https://ant.design/components/tabs",
      "category": "Data Display"
    },
    {
      "name": "Table",
      "url": "https://ant.design/components/table",
      "category": "Data Display"
    },
    {
      "name": "Alert",
      "url": "https://ant.design/components/alert",
      "category": "Feedback"
    },
    {
      "name": "Drawer",
      "url": "https://ant.design/components/drawer",
      "category": "Feedback"
    },
    {
      "name": "Modal",
      "url": "https://ant.design/components/modal",
      "category": "Feedback"
    },
    {
      "name": "Message",
      "url": "https://ant.design/components/message",
      "category": "Feedback"
    },
    {
      "name": "Notification",
      "url": "https://ant.design/components/notification",
      "category": "Feedback"
    },
    {
      "name": "Progress",
      "url": "https://ant.design/components/progress",
      "category": "Feedback"
    },
    {
      "name": "Popconfirm",
      "url": "https://ant.design/components/popconfirm",
      "category": "Feedback"
    },
    {
      "name": "Result",
      "url": "https://ant.design/components/result",
      "category": "Feedback"
    },
    {
      "name": "Spin",
      "url": "https://ant.design/components/spin",
      "category": "Feedback"
    },
    {
      "name": "Skeleton",
      "url": "https://ant.design/components/skeleton",
      "category": "Feedback"
    },
    {
      "name": "Anchor",
      "url": "https://ant.design/components/anchor",
      "category": "Other"
    },
    {
      "name": "BackTop",
      "url": "https://ant.design/components/back-top",
      "category": "Other"
    },
    {
      "name": "ConfigProvider",
      "url": "https://ant.design/components/config-provider",
      "category": "Other"
    },
    {
      "name": "Divider",
      "url": "https://ant.design/components/divider",
      "category": "Other"
    },
    {
      "name": "LocaleProvider (Deprecated)",
      "url": "https://ant.design/components/locale-provider",
      "category": "Deprecated"
    },
    {
      "name": "Mention (Deprecated)",
      "url": "https://ant.design/components/mention",
      "category": "Deprecated"
    }
  ]
}
